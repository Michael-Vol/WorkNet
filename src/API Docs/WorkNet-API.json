{
  "openapi": "3.1.0",
  "info": {
    "title": "WorkNet API",
    "version": "1.0",
    "summary": "A Social Network for Professionals"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/users/signup": {
      "post": {
        "summary": "Create New User",
        "operationId": "post-user",
        "responses": {
          "200": {
            "description": "User Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "New User Bob Fellow": {
                    "value": {
                      "id": 12,
                      "firstName": "Bob",
                      "lastName": "Fellow",
                      "email": "bob.fellow@gmail.com",
                      "dateOfBirth": "1996-08-24",
                      "emailVerified": false,
                      "createDate": "2020-11-18"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing Required Information"
          },
          "409": {
            "description": "Email Already Taken"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "dateOfBirth"
                ]
              },
              "examples": {
                "Create User Bob Fellow": {
                  "value": {
                    "firstName": "Bob",
                    "lastName": "Fellow",
                    "email": "bob.fellow@gmail.com",
                    "dateOfBirth": "1996-08-24"
                  }
                }
              }
            }
          },
          "description": "Post the necessary fields for the API to create a new user."
        },
        "description": "Create a new user."
      },
      "parameters": []
    },
    "/users/me": {
      "parameters": [],
      "patch": {
        "summary": "",
        "operationId": "patch-profile",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Update an existing user profile"
      },
      "get": {
        "summary": "",
        "operationId": "get-users-me",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "",
        "operationId": "post-users-login",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/posts": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {}
              }
            }
          }
        },
        "operationId": "get-users-posts",
        "description": "Get all posts from a specific user"
      },
      "parameters": []
    },
    "/post": {
      "post": {
        "summary": "",
        "operationId": "post-users-post",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Creates new post "
      },
      "parameters": [],
      "patch": {
        "summary": "",
        "operationId": "patch-post",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Edit a post"
      },
      "delete": {
        "summary": "",
        "operationId": "delete-post",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Remove a post"
      }
    },
    "/post/likes": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-post-likes",
        "description": "Returns a list of users that have liked a post."
      }
    },
    "/post/like": {
      "post": {
        "summary": "",
        "operationId": "post-post-like",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Like a post"
      },
      "delete": {
        "summary": "",
        "operationId": "delete-post-like",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Remove a like from a post"
      }
    },
    "/post/comment": {
      "post": {
        "summary": "",
        "operationId": "post-post-comment",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Comment a post"
      },
      "patch": {
        "summary": "",
        "operationId": "patch-post-comment",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Edit a comment"
      }
    },
    "/post/comments": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-post-comments",
        "description": "Get all comments of a post"
      }
    },
    "/conversations": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-conversations",
        "description": "Get all conversations of all user"
      }
    },
    "/conversation": {
      "post": {
        "summary": "",
        "operationId": "post-conversation",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Create a new conversation"
      }
    },
    "/conversation/message": {
      "delete": {
        "summary": "",
        "operationId": "delete-conversation-message",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Delete a message"
      },
      "post": {
        "summary": "",
        "operationId": "post-conversation-message",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/messages": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [],
        "responses": {},
        "operationId": "get-messages",
        "description": "Get all messages"
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "description": "",
        "examples": [
          {
            "id": 142,
            "firstName": "Alice",
            "lastName": "Smith",
            "email": "alice.smith@gmail.com",
            "dateOfBirth": "1997-10-31",
            "emailVerified": true,
            "signUpDate": "2019-08-24"
          }
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the given user."
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "1997-10-31"
          },
          "isAdmin": {
            "type": "boolean"
          },
          "password": {
            "type": "string"
          },
          "phone number": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "email"
        ]
      },
      "Post": {
        "title": "Posts",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Comment": {
        "title": "Comment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "post": {
            "$ref": "#/components/schemas/Post"
          },
          "body": {
            "type": "string"
          }
        }
      },
      "Likes": {
        "title": "Likes",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "post": {
            "$ref": "#/components/schemas/Post"
          }
        }
      },
      "Profile": {
        "title": "Profile",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "bio": {
            "type": "string"
          },
          "Work Experience": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "Education": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "Employer": {
            "type": "string"
          }
        }
      },
      "Conversation": {
        "title": "Conversations",
        "type": "object",
        "description": "",
        "properties": {
          "id": {
            "type": "string"
          },
          "userOne": {
            "$ref": "#/components/schemas/User"
          },
          "userTwo": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Message": {
        "title": "Messages",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "Conversation": {
            "$ref": "#/components/schemas/Conversations"
          },
          "body": {
            "type": "string"
          },
          "sender": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "Listings": {
        "title": "Listings",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      }
    }
  }
}